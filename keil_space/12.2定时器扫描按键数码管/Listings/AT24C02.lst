C51 COMPILER V9.54   AT24C02                                                               04/02/2025 12:36:26 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE AT24C02
OBJECT MODULE PLACED IN .\Objects\AT24C02.obj
COMPILER INVOKED BY: D:\software\develop\Keil_v\C51\BIN\C51.EXE AT24C02.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PR
                    -INT(.\Listings\AT24C02.lst) OBJECT(.\Objects\AT24C02.obj)

line level    source

   1          #include "IIC.h"
   2          #include <REGX52.H>
   3          //#include "LCD1602.h"
   4          #define AT24C02_ADDRESS 0xA0
   5          
   6          /**
   7            * @brief      AT24C02写入一个字节
   8            * @param      wordAddress:存放数据的地址       Data:数据的值
   9            * @retval     无     
  10          */
  11          void AT24C02_WriteByte(unsigned char wordAddress , Data)
  12          {
  13   1              I2C_Start();
  14   1              I2C_SendByte(AT24C02_ADDRESS);
  15   1              I2C_ReceiveACK();
  16   1              I2C_SendByte(wordAddress);
  17   1              I2C_ReceiveACK();
  18   1              I2C_SendByte(Data);
  19   1              I2C_ReceiveACK();
  20   1              I2C_Stop();
  21   1      }
  22          /**
  23            * @brief      AT24C02读取一个字节
  24            * @param      wordAddress:要读取的地址
  25            * @retval     对应地址的值
  26          */
  27          unsigned char AT24C02_ReadByte(unsigned char wordAddress)
  28          {
  29   1              unsigned char Data;
  30   1              I2C_Start();
  31   1              I2C_SendByte(AT24C02_ADDRESS);
  32   1              I2C_ReceiveACK();
  33   1              I2C_SendByte(wordAddress);
  34   1              I2C_ReceiveACK();
  35   1              I2C_Start();
  36   1              I2C_SendByte(AT24C02_ADDRESS|0x01);
  37   1              I2C_ReceiveACK();
  38   1              Data = I2C_ReceiveByte();
  39   1              I2C_SendACK(1);
  40   1              I2C_Stop();
  41   1              return Data;
  42   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =     84    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       5
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
